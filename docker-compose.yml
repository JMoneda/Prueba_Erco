version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: erco-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-erco_energy}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - erco-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Backend API
  backend:
    build: ./backend
    container_name: erco-backend
    env_file: .env
    environment:
      DB_HOST: postgres
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - erco-network
    restart: unless-stopped

  # Frontend
  frontend:
    image: nginx:alpine
    container_name: erco-frontend
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    networks:
      - erco-network
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  erco-network:
    driver: bridge